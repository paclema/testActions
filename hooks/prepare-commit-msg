#!/bin/sh

# To install this hook, save it under .git/hooks folder 
# and give permissions chmod +x .git/hooks/commit-msg

# Obtain commit message
COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

COMMIT_MSG=$(cat $COMMIT_MSG_FILE)

if [ -e .commit ]; then

    # Create CHANGELOG.md file with if not exists
    if [ ! -f "CHANGELOG.md" ]; then

        REPO_NAME=$(basename -s .git `git config --get remote.origin.url`)
        # REPO_OWNER_NAME=$(git config --get remote.origin.url | sed 's/.*\/\/github.com\///;s/\.git$//' | cut -d'/' -f1)
        echo "Changelog file not found. Creating $REPO_NAME CHANGELOG.md"

        HEADER="$REPO_NAME: Changelog"
        DIVIDER=$(printf '=%.0s' $(seq 1 ${#HEADER}))

        echo -e "$HEADER\n$DIVIDER\n\nHEAD\n----\n\n* $COMMIT_MSG" > CHANGELOG.md

    else 
        # Append commit message to the end if there is not any release yet
        if ! grep -q "^v[0-9]\+\.[0-9]\+\.[0-9]\+" CHANGELOG.md; then
            # If no version headers exist, add commit message to last line
            echo "* $COMMIT_MSG" >> CHANGELOG.md
            
        else 
            # If HEAD header is written, append the commit message before the last version messages
            if grep -q "HEAD" CHANGELOG.md; then
                # Remove last line break before latest version and include the commit message
                awk -v msg="$COMMIT_MSG" 'NR==FNR{if(/^v[0-9]+\.[0-9]+\.[0-9]+/&&!f){n=NR;f=1}next} FNR==n-1{print "* "msg"\n";next} 1' CHANGELOG.md CHANGELOG.md > tmp && mv tmp CHANGELOG.md
            else
                # If there is not HEAD header, create it befere the new commit message
                awk -v msg="$COMMIT_MSG" 'NR==FNR{if(/^v[0-9]+\.[0-9]+\.[0-9]+/&&!f){n=NR;f=1}next} FNR==n-1{print "\nHEAD\n----\n\n* "msg"\n";next} 1' CHANGELOG.md CHANGELOG.md > tmp && mv tmp CHANGELOG.md
            fi
        fi

    fi

    # Add CHANGELOG.md file to the commit
    git add CHANGELOG.md
    # git commit -m "$COMMIT_MSG"
fi
exit 0